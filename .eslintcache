[{"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\index.tsx":"1","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\app-reducer.ts":"2","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\redux-store.ts":"3","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Preloader\\Preloader.tsx":"4","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Music\\Music.tsx":"5","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Settings\\Settings.tsx":"6","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\News\\News.tsx":"7","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogsContainer.tsx":"8","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\dialogs-reducer.ts":"9","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\sidebar-reducer.ts":"10","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\auth-reducer.ts":"11","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-reducer.ts":"12","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-selectors.ts":"13","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\hoc\\withAuthRedirect.tsx":"14","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Dialogs.tsx":"15","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\Users.tsx":"16","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\api.ts":"17","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\object-utils.ts":"18","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\validators.ts":"19","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\User.tsx":"20","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"21","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\AddPost.tsx":"22","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\FormsControls\\FormsControls.tsx":"23","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Message\\Message.tsx":"24","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"25","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Button\\ButtonUpload.tsx":"26","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileDataEdit.tsx":"27","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Errors\\404.tsx":"28","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\profile-reducer.ts":"29","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\Captcha.tsx":"30","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\security-api.ts":"31","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\profile-api.ts":"32","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\users-api.ts":"33","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\auth-api.ts":"34","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\App.tsx":"35","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"36","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\UserSearchForm.tsx":"37","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\FormsControls\\CreateAntFields.jsx":"38","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\UsersPage.tsx":"39","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\LoginPage.tsx":"40","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\LoginForm.tsx":"41","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfilePage.tsx":"42","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Header\\MainHeader.tsx":"43","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\SiderMenu\\SiderMenu.tsx":"44","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\app-selectors.ts":"45","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\auth-selectors.ts":"46","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Pages\\Chat\\ChatPage.tsx":"47","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Pages\\Chat\\Messages.tsx":"48","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Pages\\Chat\\AddMessageForm.tsx":"49","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\chat-reducer.ts":"50","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\chat-api.ts":"51","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\profile-selectors.ts":"52","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileData.tsx":"53","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\Posts.tsx":"54","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\validate-fields.js":"55","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\FieldFormats.js":"56"},{"size":221,"mtime":1613011947516,"results":"57","hashOfConfig":"58"},{"size":1075,"mtime":1612437976416,"results":"59","hashOfConfig":"58"},{"size":1589,"mtime":1613131000619,"results":"60","hashOfConfig":"58"},{"size":298,"mtime":1611937464195,"results":"61","hashOfConfig":"58"},{"size":171,"mtime":1613390087635,"results":"62","hashOfConfig":"58"},{"size":7258,"mtime":1613405259641,"results":"63","hashOfConfig":"58"},{"size":174,"mtime":1613390118115,"results":"64","hashOfConfig":"58"},{"size":1225,"mtime":1612773019612,"results":"65","hashOfConfig":"58"},{"size":1198,"mtime":1612455556361,"results":"66","hashOfConfig":"58"},{"size":242,"mtime":1611648611337,"results":"67","hashOfConfig":"58"},{"size":3054,"mtime":1612945774233,"results":"68","hashOfConfig":"58"},{"size":5120,"mtime":1612876456845,"results":"69","hashOfConfig":"58"},{"size":942,"mtime":1612864370247,"results":"70","hashOfConfig":"58"},{"size":676,"mtime":1612783569561,"results":"71","hashOfConfig":"58"},{"size":2301,"mtime":1612771525100,"results":"72","hashOfConfig":"58"},{"size":3355,"mtime":1613390187852,"results":"73","hashOfConfig":"58"},{"size":453,"mtime":1612429483327,"results":"74","hashOfConfig":"58"},{"size":263,"mtime":1612440273858,"results":"75","hashOfConfig":"58"},{"size":1395,"mtime":1611992458636,"results":"76","hashOfConfig":"58"},{"size":1993,"mtime":1612945680930,"results":"77","hashOfConfig":"58"},{"size":2034,"mtime":1613390822136,"results":"78","hashOfConfig":"58"},{"size":1379,"mtime":1613374596420,"results":"79","hashOfConfig":"58"},{"size":729,"mtime":1612189400643,"results":"80","hashOfConfig":"58"},{"size":361,"mtime":1612458695642,"results":"81","hashOfConfig":"58"},{"size":470,"mtime":1612850771364,"results":"82","hashOfConfig":"58"},{"size":405,"mtime":1611919509534,"results":"83","hashOfConfig":"58"},{"size":2384,"mtime":1613388658995,"results":"84","hashOfConfig":"58"},{"size":373,"mtime":1611919509567,"results":"85","hashOfConfig":"58"},{"size":4308,"mtime":1613391171960,"results":"86","hashOfConfig":"58"},{"size":537,"mtime":1613014299063,"results":"87","hashOfConfig":"58"},{"size":271,"mtime":1612427199846,"results":"88","hashOfConfig":"58"},{"size":1277,"mtime":1612796778614,"results":"89","hashOfConfig":"58"},{"size":867,"mtime":1613284155812,"results":"90","hashOfConfig":"58"},{"size":805,"mtime":1612429483286,"results":"91","hashOfConfig":"58"},{"size":4203,"mtime":1613393110681,"results":"92","hashOfConfig":"58"},{"size":1370,"mtime":1613403196586,"results":"93","hashOfConfig":"58"},{"size":2226,"mtime":1613394152173,"results":"94","hashOfConfig":"58"},{"size":2308,"mtime":1613398978397,"results":"95","hashOfConfig":"58"},{"size":488,"mtime":1613019059979,"results":"96","hashOfConfig":"58"},{"size":773,"mtime":1613014103441,"results":"97","hashOfConfig":"58"},{"size":2326,"mtime":1613014103474,"results":"98","hashOfConfig":"58"},{"size":1446,"mtime":1613375887328,"results":"99","hashOfConfig":"58"},{"size":1569,"mtime":1613014710638,"results":"100","hashOfConfig":"58"},{"size":1192,"mtime":1613019059957,"results":"101","hashOfConfig":"58"},{"size":188,"mtime":1613013408140,"results":"102","hashOfConfig":"58"},{"size":555,"mtime":1613374596399,"results":"103","hashOfConfig":"58"},{"size":931,"mtime":1613280383451,"results":"104","hashOfConfig":"58"},{"size":1987,"mtime":1613285671417,"results":"105","hashOfConfig":"58"},{"size":1597,"mtime":1613275018912,"results":"106","hashOfConfig":"58"},{"size":2937,"mtime":1613376561875,"results":"107","hashOfConfig":"58"},{"size":2675,"mtime":1613285412578,"results":"108","hashOfConfig":"58"},{"size":510,"mtime":1613374596536,"results":"109","hashOfConfig":"58"},{"size":1931,"mtime":1613403035311,"results":"110","hashOfConfig":"58"},{"size":1786,"mtime":1613375265202,"results":"111","hashOfConfig":"58"},{"size":693,"mtime":1613399199771,"results":"112","hashOfConfig":"58"},{"size":76,"mtime":1613399199749,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1h6w780",{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\index.tsx",[],["242","243"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\app-reducer.ts",["244","245"],"import { getAuthData } from './auth-reducer'\r\nimport {AppStateType, BaseThunkType, InferActionsType} from './redux-store'\r\nimport {Dispatch} from 'redux'\r\n\r\n// initial state\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n// reducer\r\nconst appReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'APP/SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\n// actions\r\nconst actions = {\r\n    setInitialized: () => ({ type: 'APP/SET_INITIALIZED' } as const)\r\n}\r\n\r\n// definition types for thunks-creators\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n// thunks\r\nexport const initializeApp = (): ThunkType => async (dispatch: any) => {\r\n    await dispatch(getAuthData())\r\n    dispatch(actions.setInitialized())\r\n}\r\n\r\nexport default appReducer","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\redux-store.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Preloader\\Preloader.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Music\\Music.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Settings\\Settings.tsx",["246","247","248","249","250","251","252","253"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\News\\News.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogsContainer.tsx",["254"],"import React from 'react'\r\nimport {actions, ActionsTypes} from '../../Redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {AppStateType} from '../../Redux/redux-store'\r\nimport {DialogType, MessageType} from '../../types/types'\r\n\r\nconst DialogsContainer: React.FC<MapStateToPropsType & MapDispatchToPropsType> = ({ dialogs, messages, addMessage, isAuth }) => {\r\n\r\n    return <Dialogs dialogs={dialogs}\r\n                    messages={messages}\r\n                    addMessage={addMessage} />\r\n\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (formData: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {addMessage: actions.addMessage}),\r\n    withAuthRedirect\r\n)(DialogsContainer)\r\n\r\n\r\n","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\dialogs-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\sidebar-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\auth-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-reducer.ts",["255"],"import { Dispatch } from 'redux'\r\nimport {APIResponseType, ResultCode} from '../api/api'\r\nimport {usersAPI} from '../api/users-api'\r\nimport { updateObjectInArray } from '../utils/object-utils'\r\nimport { UsersType } from '../types/types'\r\nimport {AppStateType, BaseThunkType, InferActionsType} from './redux-store'\r\n\r\n// initial state\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>, // array of user IDs\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\n// reducer\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case 'USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case 'USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case 'USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollow\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        case 'USERS/SET_PAGE_SIZE':\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n        case \"USERS/SET_SEARCH_FILTER\":\r\n            return {\r\n                ...state,\r\n                filter: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type SearchFilterType = typeof initialState.filter\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\n// actions\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UsersType>) => ({type: 'USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setSearchFilter: (filter: SearchFilterType) => ({type: 'USERS/SET_SEARCH_FILTER', payload: filter} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'USERS/SET_TOTAL_USERS_COUNT',\r\n        totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleIsFollowing: (isFollow: boolean, userId: number) => ({\r\n        type: 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFollow,\r\n        userId\r\n    } as const),\r\n    setPageSize: (pageSize: number) => ({type: 'USERS/SET_PAGE_SIZE', pageSize} as const)\r\n}\r\n\r\n// definition types for thunks-creators\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n// thunks-creators\r\nexport const requestUsers = (page: number, pageSize: number, filter: SearchFilterType): ThunkType => async (dispatch, getState: any) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    dispatch(actions.setCurrentPage(page))\r\n    dispatch(actions.setSearchFilter(filter))\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.setUsers(data.items))\r\n    dispatch(actions.setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType,\r\n                                   userID: number,\r\n                                   apiMethod: (userID: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userID: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleIsFollowing(true, userID))\r\n\r\n    let data = await apiMethod(userID)\r\n\r\n    if (data.resultCode === ResultCode.Success)\r\n        dispatch(actionCreator(userID))\r\n\r\n    dispatch(actions.toggleIsFollowing(false, userID))\r\n}\r\n\r\nexport const follow = (userID: number): ThunkType => async (dispatch) => {\r\n    await _followUnfollowFlow(dispatch, userID, usersAPI.follow.bind(usersAPI), actions.followSuccess)\r\n}\r\n\r\nexport const unfollow = (userID: number): ThunkType => async (dispatch) => {\r\n    await _followUnfollowFlow(dispatch, userID, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-selectors.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\Users.tsx",["256","257"],"import React, {useEffect} from 'react'\r\nimport style from './Users.module.css'\r\nimport 'antd/dist/antd.css'\r\nimport {Pagination} from 'antd'\r\nimport {User} from './User'\r\nimport {UserSearchForm} from './UserSearchForm'\r\nimport {actions, requestUsers, SearchFilterType} from '../../Redux/users-reducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    getCurrentPage,\r\n    getPageSize,\r\n    getSearchFilter,\r\n    getTotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../Redux/users-selectors\"\r\nimport {useHistory} from 'react-router'\r\nimport * as queryString from \"querystring\";\r\n\r\ntype PropsType = {}\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsersSelector)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getSearchFilter)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1))\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: any = {}\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        if (pageSize != null) {\r\n            dispatch(actions.setPageSize(pageSize))\r\n            dispatch(requestUsers(pageNumber, pageSize, filter))\r\n        }\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n    }\r\n\r\n    const setPageSize = (current: number, size: number) => {\r\n        dispatch(actions.setCurrentPage(current))\r\n        dispatch(actions.setPageSize(size))\r\n    }\r\n\r\n    const onSearchFilterChanged = (filter: SearchFilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    return (\r\n        <div className={style.usersPage}>\r\n\r\n            <h2>Search your friends</h2>\r\n\r\n            <div>\r\n                <UserSearchForm onSearchFilterChanged={onSearchFilterChanged}/>\r\n            </div>\r\n\r\n            <Pagination defaultCurrent={1}\r\n                        total={totalUsersCount}\r\n                        pageSize={pageSize}\r\n                        onChange={onPageChanged}\r\n                        onShowSizeChange={setPageSize}/>\r\n\r\n            {users.map(user => <User user={user} key={user.id}/>)}\r\n        </div>\r\n    )\r\n}","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\object-utils.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\validators.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\User.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["258","259","260","261","262","263","264"],"import React, {useState} from 'react'\r\nimport style from './../Profile.module.css'\r\nimport 'antd/dist/antd.css'\r\nimport {Input, message} from 'antd'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport {ProfileDataEdit} from './ProfileDataEdit'\r\nimport {ProfileType} from '../../../types/types'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getErrorSelector, getProfileSelector} from '../../../Redux/profile-selectors'\r\nimport {savePhoto, saveProfile} from '../../../Redux/profile-reducer'\r\nimport {ProfileData} from './ProfileData'\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo(({ isOwner }) => {\r\n\r\n    // let [editMode, setEditMode] = useState(false)\r\n    const profile = useSelector(getProfileSelector)\r\n    // const error = useSelector(getErrorSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onChange = (e: any) => {\r\n        if (e.target.files.length) {\r\n            dispatch(savePhoto(e.target.files[0]))\r\n        }\r\n    }\r\n\r\n    // const submitProfileData = async (values: ProfileType) => {\r\n    //     await dispatch(saveProfile(values))\r\n    //     setEditMode(false)\r\n    //     if (error !== '') message.error(error)\r\n    // }\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.avatar}>\r\n                <img src={profile.photos.large || userPhoto} alt='Profile Photo'/>\r\n                {/*{isOwner && <Input type={'file'} onChange={onChange}/>}*/}\r\n            </div>\r\n\r\n            <ProfileData profile={profile}/>\r\n\r\n            {/*{editMode ? <ProfileDataEdit profile={profile} handleSubmit={submitProfileData}\r\n                                         deactivateEditMode={() => setEditMode(false)}/>\r\n                      : <ProfileData profile={profile} isOwner={isOwner} activateEditMode={() => setEditMode(true)}/>}*/}\r\n\r\n        </div>\r\n    )\r\n})","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\AddPost.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Button\\ButtonUpload.tsx",[],["265","266"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileDataEdit.tsx",["267","268","269","270"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Errors\\404.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\profile-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\Captcha.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\security-api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\profile-api.ts",["271"],"import {PhotosType, ProfileType, ProfileTypeForSave} from '../types/types'\r\nimport {instance, ResultCode, APIResponseType} from './api'\r\n\r\ntype PhotosResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileData(userID: number | null) {\r\n        return instance.get<ProfileType>(`profile/` + userID)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userID: number) {\r\n        return instance.get<string>('profile/status/' + userID)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>('profile/status/', { status: status })\r\n            .then(response => response.data)\r\n    },\r\n    savePhoto(image: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        return instance.put<APIResponseType<PhotosResponseDataType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data)\r\n    },\r\n    saveProfile(profile: ProfileTypeForSave) {\r\n        return instance.put<APIResponseType<PhotosResponseDataType>>('profile', profile)\r\n            .then(response => response.data)\r\n    }\r\n}","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\users-api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\auth-api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\App.tsx",["272"],"import React, {lazy, Suspense, useEffect} from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport './App.css'\r\nimport {Layout} from 'antd'\r\nimport {compose} from 'redux'\r\nimport {Provider, useDispatch, useSelector} from 'react-redux'\r\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {Music} from './Components/Music/Music'\r\nimport Settings from './Components/Settings/Settings'\r\nimport News from './Components/News/News'\r\nimport {MainHeader} from './Components/Header/MainHeader'\r\nimport {initializeApp} from './Redux/app-reducer'\r\nimport Preloader from './Components/common/Preloader/Preloader'\r\nimport {LoginPage} from './Components/Login/LoginPage'\r\nimport store from './Redux/redux-store'\r\nimport ProfilePage from './Components/Profile/ProfilePage'\r\nimport Error404 from './Components/common/Errors/404'\r\nimport {SiderMenu} from './Components/SiderMenu/SiderMenu'\r\nimport {getInitialized} from './Redux/app-selectors'\r\n\r\nconst DialogsContainer = lazy(() => import(\"./Components/Dialogs/DialogsContainer\"))\r\nconst UsersPage: any = lazy(() => import(\"./Components/Users/UsersPage\"))\r\nconst ChatPage = lazy(() => import(\"./Components/Pages/Chat/ChatPage\"))\r\n\r\nconst {Header, Content, Footer} = Layout\r\n\r\nconst App: React.FC = () => {\r\n\r\n    /*catchAllUnhandledErrors = (e: any) => {\r\n        alert('Some error occurred')\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener('unHandledRejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unHandledRejection', this.catchAllUnhandledErrors)\r\n    }*/\r\n\r\n    const initialized = useSelector(getInitialized)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n    }, [])\r\n\r\n    if (!initialized)\r\n        return <Preloader/>\r\n    else\r\n        return (\r\n            <Layout className=\"container\">\r\n                <Header>\r\n                    <MainHeader/>\r\n                </Header>\r\n                <Layout>\r\n                    <SiderMenu/>\r\n                    <Layout style={{padding: '0 24px 24px'}}>\r\n                        <Content\r\n                            className=\"site-layout-background\"\r\n                            style={{\r\n                                padding: 24,\r\n                                margin: 0,\r\n                                minHeight: 280,\r\n                            }}\r\n                        >\r\n\r\n                            <div>\r\n                                <Suspense fallback={<div>Loading...</div>}>\r\n                                    <Switch>\r\n                                        <Route exact path='/' children={() => <Redirect to=\"/profile\"/>}/>\r\n                                        <Route path='/profile/:userId?' component={ProfilePage as React.FC}/>\r\n                                        <Route path='/dialogs' component={DialogsContainer}/>\r\n                                        <Route path='/news' component={News}/>\r\n                                        <Route path='/music' component={Music}/>\r\n                                        <Route path='/settings' component={Settings as React.FC}/>\r\n                                        <Route path='/users' component={UsersPage}/>\r\n                                        <Route path='/login' component={LoginPage}/>\r\n                                        <Route path='/chat' component={ChatPage}/>\r\n                                        <Route path='*' component={Error404}/>\r\n                                    </Switch>\r\n                                </Suspense>\r\n                            </div>\r\n\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n\r\n                <Footer style={{textAlign: 'center'}}>2021 Created by Alexey Lomshakov</Footer>\r\n            </Layout>\r\n        )\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(withRouter)(App)\r\n\r\nexport const MainApp: React.FC = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <AppContainer/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    )\r\n}","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\UserSearchForm.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\FormsControls\\CreateAntFields.jsx",[],["273","274"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\UsersPage.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\LoginPage.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\LoginForm.tsx",["275"],"import 'antd/dist/antd.css'\r\nimport React, { useState } from 'react'\r\nimport { Form, Input, Button, Checkbox, Alert, Modal } from 'antd'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../Redux/auth-reducer'\r\nimport Captcha from './Captcha'\r\nimport { AppStateType } from '../../Redux/redux-store'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 }\r\n}\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 }\r\n}\r\n\r\nconst ModalLogin: React.FC<MapStateToPropsType & MapDispatchToPropsType> = ({ isAuth, login, authError, captchaUrl }) => {\r\n\r\n    const [visible, setVisible] = useState(true)\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Login\"\r\n            visible={visible}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n        >\r\n            <LoginForm login={login} authError={authError} captchaUrl={captchaUrl} isAuth={isAuth}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst LoginForm: React.FC<MapStateToPropsType & MapDispatchToPropsType> = ({ login, authError, captchaUrl }) => {\r\n\r\n    const onFinish = (values: ValuesLoginType) => {\r\n        login(values)\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n\r\n            {authError && <Alert style={{ marginBottom: \"30px\" }}\r\n                                       message={\"Error: \" + `${authError}`}\r\n                                       type=\"error\"\r\n                                       showIcon />}\r\n\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[{ required: true, message: 'Please input your username!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Login\r\n                </Button>\r\n            </Form.Item>\r\n\r\n            { captchaUrl && <Captcha captchaUrl={captchaUrl} /> }\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport type ValuesLoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: null | string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    authError: string | null\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (values: ValuesLoginType) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    authError: state.auth.authError,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(ModalLogin)","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfilePage.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Header\\MainHeader.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\SiderMenu\\SiderMenu.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\app-selectors.ts",["276"],"import { createSelector } from 'reselect'\r\nimport { AppStateType } from './redux-store'\r\n\r\nexport const getInitialized = (state: AppStateType) => {\r\n    return state.app.initialized\r\n}\r\n\r\n","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\auth-selectors.ts",["277"],"import { createSelector } from 'reselect'\r\nimport { AppStateType } from './redux-store'\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getAuthError = (state: AppStateType) => {\r\n    return state.auth.authError\r\n}\r\n\r\nexport const getCaptchaUrl = (state: AppStateType) => {\r\n    return state.auth.captchaUrl\r\n}\r\n\r\nexport const getLoginSelector = (state: AppStateType) => {\r\n    return state.auth.login\r\n}\r\n\r\nexport const getUserIdSelector = (state: AppStateType) => {\r\n    return state.auth.userId\r\n}","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Pages\\Chat\\ChatPage.tsx",["278"],"import React, {useEffect} from 'react'\r\nimport {Messages} from './Messages'\r\nimport {AddMessageForm} from './AddMessageForm'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {startChat, stopChat} from '../../../Redux/chat-reducer'\r\nimport {AppStateType} from '../../../Redux/redux-store'\r\n\r\nconst ChatPage = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Chat = () => {\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startChat())\r\n        return () => {\r\n            dispatch(stopChat())\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {status === 'error' && <div>Error with opening WebSocket connection. Please, refresh page</div>}\r\n            <Messages/>\r\n            <AddMessageForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Pages\\Chat\\Messages.tsx",["279"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport styles from './ChatPage.module.css'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../Redux/redux-store'\r\nimport {ChatMessageAPIType} from '../../../api/chat-api'\r\nimport {ChatMessageType} from '../../../Redux/chat-reducer'\r\n\r\nexport const Messages: React.FC = () => {\r\n\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [autoScroll, setAutoScroll] = useState(false)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget\r\n        if (Math.abs(element.scrollHeight - element.scrollTop - element.clientHeight) < 300) {\r\n            console.log('Scrolled to element!')\r\n            !autoScroll && setAutoScroll(true)\r\n        } else {\r\n            autoScroll && setAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (autoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n        }\r\n    }, [messages])\r\n\r\n    return (\r\n        <div className={styles.chat__wrapper} onScroll={scrollHandler}>\r\n            {messages.map((m: ChatMessageType, index) => <Message key={m.id} message={m}/>)}\r\n            <div ref={messagesAnchorRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype MessagePropsType = {\r\n    message: ChatMessageAPIType\r\n}\r\n\r\nconst Message: React.FC<MessagePropsType> = React.memo(({message}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.message}>\r\n                <div>\r\n                    <img className={styles.author__avatar} src={message.photo} alt=\"avatar\"/>\r\n                </div>\r\n                <div>\r\n                    <strong>{message.userName}</strong>\r\n                    <div>\r\n                        {message.message}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Pages\\Chat\\AddMessageForm.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\chat-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\chat-api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\profile-selectors.ts",["280"],"import { createSelector } from 'reselect'\r\nimport { AppStateType } from './redux-store'\r\n\r\nexport const getProfileSelector = (state: AppStateType) => {\r\n    return state.profilePage.profile\r\n}\r\n\r\nexport const getStatusSelector = (state: AppStateType) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getErrorSelector = (state: AppStateType) => {\r\n    return state.profilePage.profileChangeError\r\n}\r\n\r\nexport const getPostsSelector = (state: AppStateType) => {\r\n    return state.profilePage.posts\r\n}","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileData.tsx",["281"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\Posts.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\validate-fields.js",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\FieldFormats.js",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":2,"column":9,"nodeType":"288","messageId":"289","endLine":2,"endColumn":21},{"ruleId":"286","severity":1,"message":"290","line":34,"column":6,"nodeType":"288","messageId":"289","endLine":34,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":32,"column":8,"nodeType":"293","endLine":32,"endColumn":10,"suggestions":"294"},{"ruleId":"286","severity":1,"message":"295","line":49,"column":11,"nodeType":"288","messageId":"289","endLine":49,"endColumn":17},{"ruleId":"286","severity":1,"message":"296","line":54,"column":11,"nodeType":"288","messageId":"289","endLine":54,"endColumn":27},{"ruleId":"297","severity":1,"message":"298","line":55,"column":19,"nodeType":"299","messageId":"300","endLine":55,"endColumn":42},{"ruleId":"297","severity":1,"message":"298","line":57,"column":20,"nodeType":"299","messageId":"300","endLine":57,"endColumn":52},{"ruleId":"297","severity":1,"message":"298","line":58,"column":21,"nodeType":"299","messageId":"300","endLine":58,"endColumn":54},{"ruleId":"297","severity":1,"message":"298","line":61,"column":20,"nodeType":"299","messageId":"300","endLine":61,"endColumn":64},{"ruleId":"301","severity":1,"message":"302","line":75,"column":25,"nodeType":"303","endLine":75,"endColumn":143},{"ruleId":"286","severity":1,"message":"304","line":2,"column":18,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"305","line":94,"column":6,"nodeType":"288","messageId":"289","endLine":94,"endColumn":18},{"ruleId":"291","severity":1,"message":"306","line":54,"column":8,"nodeType":"293","endLine":54,"endColumn":10,"suggestions":"307"},{"ruleId":"291","severity":1,"message":"308","line":66,"column":8,"nodeType":"293","endLine":66,"endColumn":29,"suggestions":"309"},{"ruleId":"286","severity":1,"message":"310","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"286","severity":1,"message":"311","line":4,"column":16,"nodeType":"288","messageId":"289","endLine":4,"endColumn":23},{"ruleId":"286","severity":1,"message":"312","line":7,"column":9,"nodeType":"288","messageId":"289","endLine":7,"endColumn":24},{"ruleId":"286","severity":1,"message":"313","line":8,"column":9,"nodeType":"288","messageId":"289","endLine":8,"endColumn":20},{"ruleId":"286","severity":1,"message":"314","line":10,"column":9,"nodeType":"288","messageId":"289","endLine":10,"endColumn":25},{"ruleId":"286","severity":1,"message":"315","line":11,"column":20,"nodeType":"288","messageId":"289","endLine":11,"endColumn":31},{"ruleId":"301","severity":1,"message":"302","line":44,"column":17,"nodeType":"303","endLine":44,"endColumn":83},{"ruleId":"282","replacedBy":"316"},{"ruleId":"284","replacedBy":"317"},{"ruleId":"297","severity":1,"message":"298","line":22,"column":19,"nodeType":"299","messageId":"300","endLine":22,"endColumn":42},{"ruleId":"297","severity":1,"message":"298","line":24,"column":20,"nodeType":"299","messageId":"300","endLine":24,"endColumn":52},{"ruleId":"297","severity":1,"message":"298","line":25,"column":21,"nodeType":"299","messageId":"300","endLine":25,"endColumn":54},{"ruleId":"297","severity":1,"message":"298","line":28,"column":20,"nodeType":"299","messageId":"300","endLine":28,"endColumn":64},{"ruleId":"286","severity":1,"message":"318","line":2,"column":19,"nodeType":"288","messageId":"289","endLine":2,"endColumn":29},{"ruleId":"291","severity":1,"message":"319","line":47,"column":8,"nodeType":"293","endLine":47,"endColumn":10,"suggestions":"320"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"321","severity":1,"message":"322","line":63,"column":59,"nodeType":"323","messageId":"324","endLine":63,"endColumn":60},{"ruleId":"286","severity":1,"message":"325","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"286","severity":1,"message":"325","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"291","severity":1,"message":"319","line":26,"column":8,"nodeType":"293","endLine":26,"endColumn":10,"suggestions":"326"},{"ruleId":"291","severity":1,"message":"327","line":28,"column":8,"nodeType":"293","endLine":28,"endColumn":18,"suggestions":"328"},{"ruleId":"286","severity":1,"message":"325","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"286","severity":1,"message":"329","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"@typescript-eslint/no-unused-vars","'AppStateType' is defined but never used.","Identifier","unusedVar","'DispatchType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["332"],"'layout' is assigned a value but never used.","'validateMessages' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ActionsTypes' is defined but never used.","'GetStateType' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["333"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["334"],"'useState' is defined but never used.","'message' is defined but never used.","'ProfileDataEdit' is defined but never used.","'ProfileType' is defined but never used.","'getErrorSelector' is defined but never used.","'saveProfile' is defined but never used.",["330"],["331"],"'ResultCode' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["335"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'createSelector' is defined but never used.",["336"],"React Hook useEffect has a missing dependency: 'autoScroll'. Either include it or remove the dependency array.",["337"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"344","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [dispatch, userId]",{"range":"349","text":"350"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"351","text":"352"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"353","text":"354"},"Update the dependencies array to be: [dispatch]",{"range":"355","text":"356"},{"range":"357","text":"356"},"Update the dependencies array to be: [autoScroll, messages]",{"range":"358","text":"359"},[1216,1218],"[dispatch, userId]",[1808,1810],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2189,2210],"[filter, currentPage, history]",[1812,1814],"[dispatch]",[676,678],[1106,1116],"[autoScroll, messages]"]