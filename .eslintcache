[{"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\index.js":"1","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\App.js":"2","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\app-reducer.ts":"3","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\redux-store.ts":"4","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Preloader\\Preloader.tsx":"5","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Music\\Music.tsx":"6","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Settings\\Settings.tsx":"7","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\News\\News.tsx":"8","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogsContainer.jsx":"9","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\UsersContainer.tsx":"10","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\dialogs-reducer.ts":"11","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\sidebar-reducer.ts":"12","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\auth-reducer.ts":"13","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-reducer.ts":"14","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-selectors.ts":"15","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\hoc\\withAuthRedirect.js":"16","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Dialogs.jsx":"17","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\Users.tsx":"18","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\Profile.jsx":"19","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\api.ts":"20","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\object-utils.ts":"21","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\validators.ts":"22","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\User.tsx":"23","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"24","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\Post\\PostsContainer.tsx":"25","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\AddPostContainer.tsx":"26","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"27","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\FormsControls\\FormsControls.tsx":"28","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Message\\Message.jsx":"29","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx":"30","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Button\\ButtonUpload.tsx":"31","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileContainerWithHooks.tsx":"32","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileDataEdit.jsx":"33","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Errors\\404.tsx":"34","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\profile-reducer.ts":"35","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\Captcha.tsx":"36","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Header\\HeaderContainer.tsx":"37","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\LoginForm.tsx":"38","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\security-api.ts":"39","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\profile-api.ts":"40","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\users-api.ts":"41","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\auth-api.ts":"42"},{"size":223,"mtime":1611515198735,"results":"43","hashOfConfig":"44"},{"size":5173,"mtime":1611665583047,"results":"45","hashOfConfig":"44"},{"size":1075,"mtime":1612437976416,"results":"46","hashOfConfig":"44"},{"size":1417,"mtime":1612432390766,"results":"47","hashOfConfig":"44"},{"size":298,"mtime":1611937464195,"results":"48","hashOfConfig":"44"},{"size":178,"mtime":1611663887886,"results":"49","hashOfConfig":"44"},{"size":186,"mtime":1611663887902,"results":"50","hashOfConfig":"44"},{"size":165,"mtime":1611663887869,"results":"51","hashOfConfig":"44"},{"size":950,"mtime":1612433308311,"results":"52","hashOfConfig":"44"},{"size":3051,"mtime":1612364590948,"results":"53","hashOfConfig":"44"},{"size":1191,"mtime":1612439008044,"results":"54","hashOfConfig":"44"},{"size":242,"mtime":1611648611337,"results":"55","hashOfConfig":"44"},{"size":3108,"mtime":1612437855139,"results":"56","hashOfConfig":"44"},{"size":4553,"mtime":1612436232765,"results":"57","hashOfConfig":"44"},{"size":843,"mtime":1611568577822,"results":"58","hashOfConfig":"44"},{"size":548,"mtime":1610297620986,"results":"59","hashOfConfig":"44"},{"size":2104,"mtime":1611928481531,"results":"60","hashOfConfig":"44"},{"size":1625,"mtime":1611933507918,"results":"61","hashOfConfig":"44"},{"size":816,"mtime":1611308943667,"results":"62","hashOfConfig":"44"},{"size":453,"mtime":1612429483327,"results":"63","hashOfConfig":"44"},{"size":263,"mtime":1612440273858,"results":"64","hashOfConfig":"44"},{"size":1395,"mtime":1611992458636,"results":"65","hashOfConfig":"44"},{"size":1952,"mtime":1611565687434,"results":"66","hashOfConfig":"44"},{"size":2853,"mtime":1612353575011,"results":"67","hashOfConfig":"44"},{"size":2056,"mtime":1611934778082,"results":"68","hashOfConfig":"44"},{"size":1530,"mtime":1612433424985,"results":"69","hashOfConfig":"44"},{"size":1171,"mtime":1611651981828,"results":"70","hashOfConfig":"44"},{"size":729,"mtime":1612189400643,"results":"71","hashOfConfig":"44"},{"size":190,"mtime":1607409435728,"results":"72","hashOfConfig":"44"},{"size":373,"mtime":1607441543723,"results":"73","hashOfConfig":"44"},{"size":405,"mtime":1611919509534,"results":"74","hashOfConfig":"44"},{"size":2327,"mtime":1611939756125,"results":"75","hashOfConfig":"44"},{"size":2303,"mtime":1612353751587,"results":"76","hashOfConfig":"44"},{"size":373,"mtime":1611919509567,"results":"77","hashOfConfig":"44"},{"size":4302,"mtime":1612438391144,"results":"78","hashOfConfig":"44"},{"size":562,"mtime":1611663887926,"results":"79","hashOfConfig":"44"},{"size":1594,"mtime":1611666743031,"results":"80","hashOfConfig":"44"},{"size":3422,"mtime":1612429986999,"results":"81","hashOfConfig":"44"},{"size":271,"mtime":1612427199846,"results":"82","hashOfConfig":"44"},{"size":1270,"mtime":1612438041304,"results":"83","hashOfConfig":"44"},{"size":763,"mtime":1612429483347,"results":"84","hashOfConfig":"44"},{"size":805,"mtime":1612429483286,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1h6w780",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\index.js",[],["181","182"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\App.js",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\app-reducer.ts",["183","184"],"import { getAuthData } from './auth-reducer'\r\nimport {AppStateType, BaseThunkType, InferActionsType} from './redux-store'\r\nimport {Dispatch} from 'redux'\r\n\r\n// initial state\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n// reducer\r\nconst appReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'APP/SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\n// actions\r\nconst actions = {\r\n    setInitialized: () => ({ type: 'APP/SET_INITIALIZED' } as const)\r\n}\r\n\r\n// definition types for thunks-creators\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n// thunks\r\nexport const initializeApp = (): ThunkType => async (dispatch: any) => {\r\n    await dispatch(getAuthData())\r\n    dispatch(actions.setInitialized())\r\n}\r\n\r\nexport default appReducer",["185","186"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\redux-store.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Preloader\\Preloader.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Music\\Music.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Settings\\Settings.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\News\\News.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogsContainer.jsx",["187","188"],"import {addMessage} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Users from \"../Users/Users\";\r\n\r\nclass DialogsContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader />\r\n                : null}\r\n            <Dialogs dialogsPage={this.props.dialogsPage}\r\n                     addMessage={this.props.addMessageActionCreator}\r\n                     isAuth={this.props.isAuth}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addMessage: (message) => dispatch(addMessageActionCreator(message))\r\n//     }\r\n// };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessageActionCreator: addMessage}),\r\n    withAuthRedirect\r\n)(DialogsContainer);\r\n\r\n\r\n","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\dialogs-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\sidebar-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\auth-reducer.ts",["189","190"],"import { ResultCode } from '../api/api'\r\nimport { authAPI } from '../api/auth-api'\r\nimport { securityAPI } from '../api/security-api'\r\nimport {AppStateType, BaseThunkType, InferActionsType} from './redux-store'\r\nimport { Dispatch } from 'redux'\r\nimport {ValuesLoginType} from '../Components/Login/LoginForm'\r\n\r\n// initial state\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    authError: null as string | null,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\n// reducer\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'AUTH/SET_AUTH_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: action.payload\r\n            }\r\n        case 'AUTH/GET_CAPTCHA_URL':\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\n// actions\r\nconst actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'AUTH/SET_USER_DATA',\r\n        payload: {userId, email, login, isAuth}\r\n    } as const),\r\n    setAuthError: (error: string) => ({ type: 'AUTH/SET_AUTH_ERROR', payload: error } as const),\r\n    setCaptchaUrl: (captchaUrl: string) => ({ type: 'AUTH/GET_CAPTCHA_URL', payload: captchaUrl } as const)\r\n}\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n// thunks-creators\r\nexport const getAuthData = (): ThunkType => async (dispatch) => {\r\n    const data = await authAPI.getAuthData()\r\n\r\n    if (data.resultCode === ResultCode.Success) {\r\n        let {id, email, login} = data.data\r\n        dispatch(actions.setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (values: ValuesLoginType): ThunkType => async (dispatch: any) => {\r\n    const {email, password, rememberMe, captcha} = values\r\n    const data = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (data.resultCode === ResultCode.Success) {\r\n        dispatch(getAuthData())\r\n    } else if (data.resultCode === ResultCode.CaptchaIsRequried) {\r\n        dispatch(actions.setAuthError('Are you human?'))\r\n        dispatch(getCaptchaUrl())\r\n    } else { dispatch(actions.setAuthError(data.messages[0])) }\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    const data = await authAPI.logout()\r\n    data.resultCode === ResultCode.Success\r\n        ? dispatch(actions.setAuthUserData(null, null, null, false))\r\n        : dispatch(actions.setAuthError(data.messages[0]))\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    dispatch(actions.setCaptchaUrl(data.url))\r\n}\r\n\r\nexport default authReducer","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-reducer.ts",["191"],"import { Dispatch } from 'redux'\r\nimport {ResultCode} from '../api/api'\r\nimport {usersAPI} from '../api/users-api'\r\nimport { updateObjectInArray } from '../utils/object-utils'\r\nimport { UsersType } from '../types/types'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {AppStateType, BaseThunkType, InferActionsType} from './redux-store'\r\n\r\n// initial state\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number> // array of user IDs\r\n}\r\n\r\n// reducer\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case 'USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case 'USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case 'USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollow\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        case 'USERS/SET_PAGE_SIZE':\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\n// actions\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UsersType>) => ({type: 'USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'USERS/SET_TOTAL_USERS_COUNT',\r\n        totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleIsFollowing: (isFollow: boolean, userId: number) => ({\r\n        type: 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFollow,\r\n        userId\r\n    } as const),\r\n    setPageSize: (pageSize: number) => ({type: 'USERS/SET_PAGE_SIZE', pageSize} as const)\r\n}\r\n\r\n// definition types for thunks-creators\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n// thunks-creators\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => async (dispatch, getState: any) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    dispatch(actions.setCurrentPage(page))\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.setUsers(data.items))\r\n    dispatch(actions.setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType,\r\n                                   userID: number,\r\n                                   apiMethod: any,\r\n                                   actionCreator: (userID: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleIsFollowing(true, userID))\r\n\r\n    let data = await apiMethod(userID)\r\n\r\n    if (data.resultCode === ResultCode.Success)\r\n        dispatch(actionCreator(userID))\r\n\r\n    dispatch(actions.toggleIsFollowing(false, userID))\r\n}\r\n\r\nexport const follow = (userID: number): ThunkType => async (dispatch) => {\r\n    await _followUnfollowFlow(dispatch, userID, usersAPI.follow.bind(usersAPI), actions.followSuccess)\r\n}\r\n\r\nexport const unfollow = (userID: number): ThunkType => async (dispatch) => {\r\n    await _followUnfollowFlow(dispatch, userID, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\users-selectors.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\Users.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\Profile.jsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\object-utils.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\utils\\validators\\validators.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Users\\User.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["192","193","194","195"],"import React, {useState} from 'react';\r\nimport style from './../Profile.module.css';\r\nimport 'antd/dist/antd.css';\r\nimport {Upload, message, Button, Input} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ButtonUpload from \"../../common/Button/ButtonUpload\";\r\nimport ProfileDataEdit from \"./ProfileDataEdit\";\r\n\r\nconst ProfileInfo = ({ profile, isOwner, status, updateStatus, savePhoto, saveProfile, error }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (values: any) => {\r\n        await saveProfile(values)\r\n        setEditMode(false)\r\n        if (error !== '') message.error(error)\r\n    };\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.avatar}>\r\n                <img src={profile.photos.large || userPhoto}/>\r\n                {isOwner && <Input type={'file'} onChange={onChange}/>}\r\n            </div>\r\n            {editMode ? <ProfileDataEdit profile={profile} handleSubmit={handleSubmit}\r\n                                         error={error} deactivateEditMode={() => setEditMode(false)}/>\r\n                      : <ProfileData profile={profile} status={status} updateStatus={updateStatus}\r\n                                     isOwner={isOwner} error={error} activateEditMode={() => setEditMode(true)}/>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, status, updateStatus, isOwner, activateEditMode, error }) => {\r\n\r\n    return (\r\n        <div className={style.profileDescription}>\r\n\r\n            {isOwner && <Button type='default' onClick={activateEditMode}>Edit</Button>}\r\n            <h3 className={style.name}>{profile.fullName}</h3>\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus} />\r\n            <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            {profile.lookingForAJob && <div>My skills: {profile.lookingForAJobDescription}</div>}\r\n            <div>About me: {profile.aboutMe}</div>\r\n            <div>\r\n                Contacts:\r\n\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return contactValue && <div>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\Post\\PostsContainer.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\MyPosts\\AddPostContainer.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Button\\ButtonUpload.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileContainerWithHooks.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Profile\\ProfileInfo\\ProfileDataEdit.jsx",["196","197","198","199","200","201"],"import './ProfileDataEdit.css'\r\nimport 'antd/dist/antd.css'\r\nimport React from 'react'\r\nimport {Button, Form, Input, InputNumber, Select, message} from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProfileDataEdit = ({ handleSubmit, profile, error, deactivateEditMode }) => {\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n\r\n    const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n            email: '${label} is not a valid email!',\r\n            number: '${label} is not a valid number!',\r\n        },\r\n        number: {\r\n            range: '${label} must be between ${min} and ${max}',\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Form {...layout} name=\"editProfile\"\r\n              onFinish={handleSubmit}\r\n              validateMessages={validateMessages}\r\n              initialValues={{ ...profile }}>\r\n\r\n            {/*{error && message.error(error)}*/}\r\n\r\n            <Form.Item name=\"fullName\" label=\"Name\" rules={[{ required: true }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"lookingForAJob\" label=\"Looking for a job\" rules={[{ required: true }]}>\r\n                <Select>\r\n                    <Option value={true}>Yes</Option>\r\n                    <Option value={false}>No</Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item name=\"lookingForAJobDescription\" label=\"My skills\" rules={[{ required: true }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"aboutMe\" label=\"About me\" rules={[{ required: true }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <Form.Item name={['contacts', key]} label={key}>\r\n                            <Input />\r\n                        </Form.Item>\r\n            })}\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n\r\n                <Button htmlType=\"button\" onClick={deactivateEditMode}>\r\n                    Cancel\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ProfileDataEdit",["202","203"],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\common\\Errors\\404.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Redux\\profile-reducer.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\Captcha.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\Components\\Login\\LoginForm.tsx",["204"],"import 'antd/dist/antd.css'\r\nimport React, { useState } from 'react'\r\nimport { Form, Input, Button, Checkbox, Alert, Modal } from 'antd'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../Redux/auth-reducer'\r\nimport Captcha from './Captcha'\r\nimport { AppStateType } from '../../Redux/redux-store'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 }\r\n}\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 }\r\n}\r\n\r\nconst ModalLogin: React.FC<MapStateToPropsType & MapDispatchToPropsType> = ({ isAuth, login, authError, captchaUrl }) => {\r\n\r\n    const [visible, setVisible] = useState(true)\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Login\"\r\n            visible={visible}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n        >\r\n            <LoginForm login={login} authError={authError} captchaUrl={captchaUrl} isAuth={isAuth}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst LoginForm: React.FC<MapStateToPropsType & MapDispatchToPropsType> = ({ login, authError, captchaUrl }) => {\r\n\r\n    const onFinish = (values: ValuesLoginType) => {\r\n        login(values)\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n\r\n            {authError && <Alert style={{ marginBottom: \"30px\" }}\r\n                                       message={\"Error: \" + `${authError}`}\r\n                                       type=\"error\"\r\n                                       showIcon />}\r\n\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[{ required: true, message: 'Please input your username!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Login\r\n                </Button>\r\n            </Form.Item>\r\n\r\n            { captchaUrl && <Captcha captchaUrl={captchaUrl} /> }\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport type ValuesLoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: null | string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    authError: string | null\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (values: ValuesLoginType) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    authError: state.auth.authError,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(ModalLogin)","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\security-api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\profile-api.ts",["205"],"import {PhotosType, ProfileType, ProfileTypeForSave} from '../types/types'\r\nimport {instance, ResultCode, APIResponseType} from './api'\r\n\r\ntype PhotosResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileData(userID: number | null) {\r\n        return instance.get<ProfileType>(`profile/` + userID)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userID: number) {\r\n        return instance.get<string>('profile/status/' + userID)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>('profile/status/', { status: status })\r\n            .then(response => response.data)\r\n    },\r\n    savePhoto(image: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        return instance.put<APIResponseType<PhotosResponseDataType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data)\r\n    },\r\n    saveProfile(profile: ProfileTypeForSave) {\r\n        return instance.put<APIResponseType<PhotosResponseDataType>>('profile', profile)\r\n            .then(response => response.data)\r\n    }\r\n}","C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\users-api.ts",[],"C:\\Users\\admin\\WebstormProjects\\react-lessons\\project1\\src\\api\\auth-api.ts",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":2,"column":9,"nodeType":"212","messageId":"213","endLine":2,"endColumn":21},{"ruleId":"210","severity":1,"message":"214","line":34,"column":6,"nodeType":"212","messageId":"213","endLine":34,"endColumn":18},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"215","severity":1,"message":"216","line":6,"column":9,"nodeType":"212","messageId":"213","endLine":6,"endColumn":19},{"ruleId":"215","severity":1,"message":"217","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":4,"column":9,"nodeType":"212","messageId":"213","endLine":4,"endColumn":21},{"ruleId":"210","severity":1,"message":"218","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":18},{"ruleId":"210","severity":1,"message":"219","line":85,"column":6,"nodeType":"212","messageId":"213","endLine":85,"endColumn":18},{"ruleId":"215","severity":1,"message":"220","line":4,"column":9,"nodeType":"212","messageId":"213","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"221","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":24},{"ruleId":"215","severity":1,"message":"222","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":20},{"ruleId":"223","severity":1,"message":"224","line":35,"column":17,"nodeType":"225","endLine":35,"endColumn":63},{"ruleId":"215","severity":1,"message":"226","line":4,"column":30,"nodeType":"212","messageId":"213","endLine":4,"endColumn":41},{"ruleId":"215","severity":1,"message":"227","line":4,"column":51,"nodeType":"212","messageId":"213","endLine":4,"endColumn":58},{"ruleId":"228","severity":1,"message":"229","line":16,"column":19,"nodeType":"230","messageId":"231","endLine":16,"endColumn":42},{"ruleId":"228","severity":1,"message":"229","line":18,"column":20,"nodeType":"230","messageId":"231","endLine":18,"endColumn":52},{"ruleId":"228","severity":1,"message":"229","line":19,"column":21,"nodeType":"230","messageId":"231","endLine":19,"endColumn":54},{"ruleId":"228","severity":1,"message":"229","line":22,"column":20,"nodeType":"230","messageId":"231","endLine":22,"endColumn":64},{"ruleId":"206","replacedBy":"232"},{"ruleId":"208","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":63,"column":59,"nodeType":"236","messageId":"237","endLine":63,"endColumn":60},{"ruleId":"210","severity":1,"message":"238","line":2,"column":19,"nodeType":"212","messageId":"213","endLine":2,"endColumn":29},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"@typescript-eslint/no-unused-vars","'AppStateType' is defined but never used.","Identifier","unusedVar","'DispatchType' is defined but never used.","no-unused-vars","'withRouter' is defined but never used.","'Users' is defined but never used.","'Dispatch' is defined but never used.","'GetStateType' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'ButtonUpload' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputNumber' is defined but never used.","'message' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["239"],["240"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'ResultCode' is defined but never used.","no-global-assign","no-unsafe-negation"]